[gd_scene load_steps=2 format=3 uid="uid://m6gtmyhxv6mx"]

[sub_resource type="GDScript" id="GDScript_83f53"]
script/source = "extends Shapekey_Slider

var shapekeys_down = [] #lefts and rights for negative values

func emit_shapekeys():
	var data = {}
	if $Slider.value > 0:
		for shapekey_name in shapekeys:
			data[shapekey_name] = $Slider.value / 100	
		for shapekey_name in shapekeys_down:
			data[shapekey_name] = 0
	else:
		for shapekey_name in shapekeys:
			data[shapekey_name] = 0	
		for shapekey_name in shapekeys_down:
			data[shapekey_name] = $Slider.value / 100 * -1
	change_shapekeys.emit(data)
"

[node name="Shapekey_Slider" type="VBoxContainer"]
offset_right = 72.0
offset_bottom = 51.0
script = SubResource("GDScript_83f53")

[node name="Label_Container" type="HBoxContainer" parent="."]
layout_mode = 2

[node name="Label" type="Label" parent="Label_Container"]
layout_mode = 2
size_flags_horizontal = 3

[node name="Value_Edit" type="LineEdit" parent="Label_Container"]
layout_mode = 2
size_flags_horizontal = 8
text = "0"
alignment = 1

[node name="Slider" type="HSlider" parent="."]
layout_mode = 2
min_value = -100.0

[connection signal="text_submitted" from="Label_Container/Value_Edit" to="." method="value_edit_text_submitted"]
[connection signal="drag_ended" from="Slider" to="." method="slider_drag_ended"]
[connection signal="value_changed" from="Slider" to="." method="slider_value_changed"]
